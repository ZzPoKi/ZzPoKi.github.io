<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello Hexo</title>
    <url>/2023/11/06/Hello-Hexo/</url>
    <content><![CDATA[<h6 id="hexo博客算是初步部署好了，以后就在这里写写东西吧🎉"><a href="#hexo博客算是初步部署好了，以后就在这里写写东西吧🎉" class="headerlink" title="hexo博客算是初步部署好了，以后就在这里写写东西吧🎉"></a>hexo博客算是初步部署好了，以后就在这里写写东西吧🎉</h6>]]></content>
  </entry>
  <entry>
    <title>令Azure VPS的公共ip开放外部访问</title>
    <url>/2023/11/18/azure-access/</url>
    <content><![CDATA[<p>对于刚创建的Azure VM（VPS）来说，由于Azure防火墙的存在，默认情况下只有少数几个端口（如SSH服务的22端口）可供外部访问使用。而要想将更多的端口开放出来，则需要额外添加入站的端口规则。</p>
<span id="more"></span>

<h1 id="1-Azure-VPS在默认情况下无法ping通的原因"><a href="#1-Azure-VPS在默认情况下无法ping通的原因" class="headerlink" title="1. Azure VPS在默认情况下无法ping通的原因"></a>1. Azure VPS在默认情况下无法ping通的原因</h1><p>通常来说，我们在对远程主机进行连通性测试时，都习惯使用ping命令，而最开始我将Azure VPS创建出来之后，首先就是遇到了Azure主机无法ping通的问题。经过了解才知道，Azure存在一道防火墙，使得ICMP协议下的数据包被阻拦，以下是官方文档的说明：</p>
<blockquote>
<p>在 Azure 中，ICMP 包无法通过防火墙和负载均衡器，所以不能直接使用 ping 来测试 Azure 中的虚拟机和服务的连通性（VPN 和 Express Route 通道中的流量不经过负载均衡器，所以只要链路上的防火墙允许 ICMP 包传递，ping 依然可用）。</p>
</blockquote>
<p>而ping实际上就是向目标主机发送一个ICMP Echo的请求数据包，然后等待目标主机返回响应数据包，重复多次来计算网络时延和丢包率的一个过程。显然由于Azure防火墙的存在，ping命令下的ICMP请求数据包被防火墙拒绝，也就解释了默认状态下为什么对Azure主机ping只会返回请求超时的原因。</p>
<h1 id="2-自定义入站端口规则"><a href="#2-自定义入站端口规则" class="headerlink" title="2. 自定义入站端口规则"></a>2. 自定义入站端口规则</h1><p>知道Azure防护墙对外部访问的限制后，我们需要做的就是去修改其网络安全组规则。首先打开Azure VM的控制台，进入到主机资源组中的NSG配置，可以看到最后有一条”DenyAllInBound“的默认规则，它将所有的外部访问都给拒绝了，而我们需要对入站端口规则进行添加设置，把端口从防火墙中开放出来。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/azure-access/denyall.png"
                     
                ></p>
<h2 id="2-1-设定拒绝外网访问的特定端口"><a href="#2-1-设定拒绝外网访问的特定端口" class="headerlink" title="2.1 设定拒绝外网访问的特定端口"></a>2.1 设定拒绝外网访问的特定端口</h2><p>在入站安全规则的设置界面中点击添加，源保持默认设定”Any“，源端口范围保持默认设定”*“即任意端口，修改目标为”Service Tag“，将目标服务标记为”Internet“，这表示限定与互联网之间的通信规则。然后修改目标端口范围，这里可以以逗号分隔的形式来定义多个目标端口，也可以设定范围。在操作上选择”拒绝“，规则名称自定，保存修改。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/azure-access/deny.png"
                     
                ></p>
<p>通过上述规则自定义，可以使外网访问走不了这几个特定的端口，保证了一定的安全。</p>
<h2 id="2-2-设定开放外部访问的端口"><a href="#2-2-设定开放外部访问的端口" class="headerlink" title="2.2 设定开放外部访问的端口"></a>2.2 设定开放外部访问的端口</h2><p>在下一优先级中，添加一条新的开放外部访问端口的规则。将源和目标均保持默认设定”Any“，将目标端口范围设定为”*“即任意范围，当然也可以自定义范围，操作上选择”允许“，规则名称自定，保存修改。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/azure-access/allow.png"
                     
                ></p>
<p>这样就可以将其余端口开放出来，供外部访问使用。</p>
<h1 id="3-重新进行ping测试"><a href="#3-重新进行ping测试" class="headerlink" title="3. 重新进行ping测试"></a>3. 重新进行ping测试</h1><p>最后在本地对Azure主机ip再次进行ping测试，可以看到成功连通。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/azure-access/ping.png"
                     
                ></p>
]]></content>
      <tags>
        <tag>Azure</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/11/05/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>Markdown的常用语法 I</title>
    <url>/2023/11/10/markdown-1/</url>
    <content><![CDATA[<p>markdown是一种轻量级的标记语言，它可以基于纯文本的形式来对文档进行编辑和修改。这里展示一些markdown的常用语法，方便个人在hexo博客下撰写自己的文章。</p>
<span id="more"></span>

<h1 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h1><p>如果要在文章中创建标题，应该在标题文字前面添加上对应标题级别的井号<code>#</code>，井号数量从一个到六个分别对应一级到六级标题。比如要创建一个二级标题和四级标题，则对应的markdown写法为：</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br></pre></td></tr></table></figure></div>

<p>呈现出来的效果即为：</p>
<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p>另外，markdown还支持使用<code>-</code>和<code>=</code>号来进行标题标识。通过在目标文本下添加任意数量的<code>-</code>或<code>=</code>号，便能够分别标识出对应文本的二级或一级标题。写法举例：</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">一级标题</span></span><br><span class="line"><span class="section">====</span></span><br><span class="line"><span class="section">二级标题</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></div>

<p>呈现出来的效果即为：</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h1 id="2-段落和换行"><a href="#2-段落和换行" class="headerlink" title="2. 段落和换行"></a>2. 段落和换行</h1><p>要创建新的段落，可以选择在段落之间空一行或多行来进行换行，当然也可以通过在前一行的末尾添加两个或多个空格，然后回车来实现换行。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">第一段</span><br><span class="line"></span><br><span class="line">第二段</span><br></pre></td></tr></table></figure></div>

<h1 id="3-粗体和斜体"><a href="#3-粗体和斜体" class="headerlink" title="3. 粗体和斜体"></a>3. 粗体和斜体</h1><h2 id="3-1-粗体"><a href="#3-1-粗体" class="headerlink" title="3.1 粗体"></a>3.1 粗体</h2><p>如果要对文本中的重点词进行加粗，需要在加粗文本前后各添加<strong>两个</strong>星号<code>**</code>或下划线<code>_</code>，但下划线在加粗相连单词或短语的中间部分时并不兼容，所以在文本加粗上应该尽量使用星号<code>*</code>进行加粗。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一段<span class="strong">**粗体文本**</span>。</span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<p>这是一段<strong>粗体文本</strong>。</p>
<h2 id="3-2-斜体"><a href="#3-2-斜体" class="headerlink" title="3.2 斜体"></a>3.2 斜体</h2><p>如果要让某段文本斜体化，和加粗文本类似，需要在斜体文本前后各添加<strong>一个</strong>星号<code>*</code>或下划线<code>_</code>，同样考虑到兼容性的问题，在文本斜体化时还是尽量使用星号<code>*</code>来实现。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">He is a <span class="emphasis">*gentleman*</span>.</span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<p>He is a <em>gentleman</em>.</p>
<p>另外，如果要使目标文本同时被加粗和斜体化，则需要在文本前后各添加<strong>三个</strong>星号<code>***</code>。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个<span class="strong">**<span class="emphasis">*重点词*</span>**</span>。</span><br></pre></td></tr></table></figure></div>
<p>效果如下：</p>
<p>这是一个<em><strong>重点词</strong></em>。</p>
<h1 id="4-创建引用"><a href="#4-创建引用" class="headerlink" title="4. 创建引用"></a>4. 创建引用</h1><p>要想创建引用，只需要添加一个<code>&gt;</code>号在被引用文本前。同样被引用文本间在换行时仍然遵循隔行或空格换行的规则。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 这是一段被引用文本</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; 这是另一段被引用文本</span></span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<blockquote>
<p>这是一段被引用文本</p>
<p>这是另一段被引用文本</p>
</blockquote>
<p>另外文本也可以被多层嵌套引用，只需要在被嵌套引用的文本前多添加一个<code>&gt;</code>即可。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 这是主要引用内容</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt;&gt; 这是附带引用内容</span></span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<blockquote>
<p>这是主要引用内容</p>
<blockquote>
<p>这是附带引用内容</p>
</blockquote>
</blockquote>
<h1 id="5-列表"><a href="#5-列表" class="headerlink" title="5. 列表"></a>5. 列表</h1><h2 id="5-1-有序列表"><a href="#5-1-有序列表" class="headerlink" title="5.1 有序列表"></a>5.1 有序列表</h2><p>想要创建有序列表，需要在每个列表项前添加一个数字加一个英文句点<code>.</code>，并以数字1作为列表的起始。</p>
<p>虽然说markdown在语法上允许以1为起始点后的列表项数可以取任意数，但这里建议编写有序列表时还是尽量让列表数按顺序排列，与呈现效果一致。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一点</span><br><span class="line"><span class="bullet">2.</span> 第二点</span><br><span class="line"><span class="bullet">3.</span> 第三点</span><br><span class="line"><span class="bullet">4.</span> 第四点</span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<ol>
<li>第一点</li>
<li>第二点 </li>
<li>第三点</li>
<li>第四点</li>
</ol>
<h2 id="5-2-无序列表"><a href="#5-2-无序列表" class="headerlink" title="5.2 无序列表"></a>5.2 无序列表</h2><p>如果要创建无序列表，需要在每个列表项前添加一个加号<code>+</code>、减号<code>-</code>或者星号<code>*</code>。同时利用缩进可以实现无序列表的嵌套。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 文章背景</span><br><span class="line"><span class="bullet">-</span> 文章开头</span><br><span class="line"><span class="bullet">-</span> 文章正文</span><br><span class="line"><span class="bullet">-</span> 文章总结</span><br><span class="line"><span class="bullet">    -</span> 拓展内容</span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<ul>
<li>文章背景</li>
<li>文章开头</li>
<li>文章正文</li>
<li>文章总结<ul>
<li>拓展内容</li>
</ul>
</li>
</ul>
<hr>
<p>下一篇文章：<a href="/2023/11/11/markdown-2">Markdown的常用语法 II</a></p>
]]></content>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown的常用语法 II</title>
    <url>/2023/11/11/markdown-2/</url>
    <content><![CDATA[<p>上一篇文章：<a href="/2023/11/10/markdown-1">Markdown的常用语法 I</a></p>
<span id="more"></span>

<h1 id="1-代码表示"><a href="#1-代码表示" class="headerlink" title="1. 代码表示"></a>1. 代码表示</h1><p>要想把文本中的某个部分以代码的形式表示出来，需要在文本的前后添加各一个反引号<code>`</code>使其被包裹起来。当部分其中本身含有反引号时，则需要前后各添加两个反引号来进行包裹。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`markdown`</span>是一种轻量级的标记语言</span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<p><code>markdown</code>是一种轻量级的标记语言</p>
<p>而想要把代码块给整段以代码形式表现出来，可以采用围栏式代码块的方式来实现。将需要被代码表示的代码块的前后分别用三个反引号<code>```</code>将代码块给包裹起来，可以在代码块前的反引号后通过指定代码的语言类型来实现代码的语法高亮。</p>
<p>比如：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">searchFile</span><span class="params">(String fileName, File dir)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (dir != <span class="literal">null</span> &amp;&amp; dir.isDirectory()) &#123;</span><br><span class="line">        <span class="comment">//得到所有的一级文件对象</span></span><br><span class="line">        File[] files = dir.listFiles();</span><br><span class="line">        <span class="keyword">if</span> (files != <span class="literal">null</span> &amp;&amp; files.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">                <span class="comment">//遍历当前文件夹内的所有文件和文件夹</span></span><br><span class="line">                <span class="keyword">if</span> (file.isFile()) &#123;</span><br><span class="line">                    <span class="comment">//如果找到的是文件</span></span><br><span class="line">                    <span class="keyword">if</span> (file.getName().equals(fileName)) &#123;</span><br><span class="line">                        <span class="comment">//判断找到的文件名与要查找的文件名是否一致</span></span><br><span class="line">                        System.out.println(<span class="string">&quot;所查找的文件路径为：&quot;</span> + file.getAbsolutePath());</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="type">Process</span> <span class="variable">p</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                            <span class="type">Runtime</span> <span class="variable">r</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">                            p = r.exec(file.getAbsolutePath());<span class="comment">//启动程序</span></span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    searchFile(fileName, file);<span class="comment">//如果找到的是文件夹，则继续递归,从当前文件夹开始继续查找</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;当前位置不是文件夹&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="2-添加链接"><a href="#2-添加链接" class="headerlink" title="2. 添加链接"></a>2. 添加链接</h1><p>如果要在文本中添加一段内含链接的链接文本，则需要在前后依次添加一对中括号<code>[]</code>和圆括号<code>()</code>，中括号填入显示的链接文本的内容，圆括号内填入内含的链接，链接后面还可以选择是否带上双引号<code>&quot;</code>包裹的title，title能够在使鼠标悬置在链接文本上时显示。比如要嵌入google的链接到文本中，则写法为：</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">google</span>](<span class="link">https://www.google.com &quot;title&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<p><a class="link"   href="https://www.google.com/"  title="title">google <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>而如果想直接嵌入可点击的链接，只需要使用尖括号<code>&lt;&gt;</code>将链接包裹起来即可。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">&lt;https://www.google.com&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<p><a class="link"   href="https://www.google.com/" >https://www.google.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h1 id="3-插入图片"><a href="#3-插入图片" class="headerlink" title="3. 插入图片"></a>3. 插入图片</h1><p>图片插入和链接嵌入的方法类似，只需要在中括号前额外添加一个感叹号<code>!</code>，然后在中括号内写入Alt标签（可以不写），并圆括号内添加图片链接，其中图片链接可以为本地图片，支持填入对应的绝对路径或相对路径，也可以是网络图片，填入对应的网络链接即可。同样链接后可以选择是否填入图片的title。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">![](<span class="link">images/markdown-2/pic1.jpg</span>)</span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/markdown-2/pic1.jpg"
                     
                ></p>
<p>而如果要让图片并排显示，则对应的markdown写法为：</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">![](<span class="link">images/markdown-2/pic2.jpg</span>) | ![](<span class="link">images/markdown-2/pic3.jpg</span>)</span><br><span class="line">---|---</span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<table>
<thead>
<tr>
<th><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/markdown-2/pic2.jpg"
                     
                ></th>
<th><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/markdown-2/pic3.jpg"
                     
                ></th>
</tr>
</thead>
</table>
<h1 id="4-表格语法"><a href="#4-表格语法" class="headerlink" title="4. 表格语法"></a>4. 表格语法</h1><p>要在文章中添加表格，应该使用三个或以上连字符（减号）<code>-</code>作为每列标题的底，并以分隔符<code>|</code>来分隔每列，在编写时单元格不需要完全一致对齐。写法举例：</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">| 姓名 | 年龄  | 性别 | </span><br><span class="line">| --- |-----|-----|</span><br><span class="line">| A  | 20  | M   |</span><br><span class="line">| B  |  19  |  F  |</span><br><span class="line">|  C |  22 |  F  |</span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<table>
<thead>
<tr>
<th>姓名</th>
<th>年龄</th>
<th>性别</th>
</tr>
</thead>
<tbody><tr>
<td>A</td>
<td>20</td>
<td>M</td>
</tr>
<tr>
<td>B</td>
<td>19</td>
<td>F</td>
</tr>
<tr>
<td>C</td>
<td>22</td>
<td>F</td>
</tr>
</tbody></table>
<p>而如果分别在标题下连字符的左侧、右侧和两侧添加冒号<code>:</code>，则会使文本对齐到表格左侧、右侧和中间。</p>
<h1 id="5-其他"><a href="#5-其他" class="headerlink" title="5. 其他"></a>5. 其他</h1><p>如果要使文章缩略展示，需要在被缩略的文本前添加上<code>&lt;!--more--&gt;</code>，这样只有在点开全文内容时被缩略文本才会显示出来。</p>
<p>对于一些被用在markdown语法上的符号，如果要把这些符号本身给显示出来，需要在符号前添加上反斜杠<code>\</code>。</p>
<p>而要想在文本中添加删除线，则要在目标文本前后各添加两个波浪号<code>~~</code>。</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个~~错误信息~~</span><br></pre></td></tr></table></figure></div>

<p>效果如下：</p>
<p>这是一个<del>错误信息</del></p>
<p>此外，markdown完全支持HTML和CSS格式编写，其在插入图片、嵌入链接、调整字体颜色等方面都能够和markdown进行配合使用。比如直接添加：</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span>这是一段红色文本<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>效果即为：</p>
<p><font color="red">这是一段红色文本</font></p>
]]></content>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
